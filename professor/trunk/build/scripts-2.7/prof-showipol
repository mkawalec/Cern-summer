#!/usr/bin/python2

"""%prog [SWITCHES] IPOL.pkl [IPOL2.pkl ...]

Show information about the interpolations in the given pickle files.
Use --help to get the availabe switches that select what is shown.
"""

import sys
import os

import professor.user as prof
from professor.tools import shell
ipshell = shell.usePrettyTraceback()

import optparse
parser = optparse.OptionParser(usage=__doc__, version=prof.version)

parser.add_option("-r", "--runs",
        dest = "RUNS",
        action = "store_true",
        help = "show the MC-runs (default)")
parser.add_option("-R", "--no-runs",
        dest = "RUNS", default=True,
        action = "store_false",
        help = "do not show the MC-runs")

parser.add_option("-n", "--numruns",
        dest = "NUMRUNS", default=True,
        action = "store_true",
        help = "show the number of MC-runs (default)")
parser.add_option("-N", "--no-numruns",
        dest = "NUMRUNS", default=True,
        action = "store_false",
        help = "do not show the number of MC-runs")

parser.add_option("-m", "--method",
        dest = "METHOD", default=False,
        action = "store_true",
        help = "show the used interpolation method")
parser.add_option("-M", "--no-method",
        dest = "METHOD", default=False,
        action = "store_false",
        help = "do not show the used interpolation method (default)")

parser.add_option("-o", "--observables",
        dest = "OBSERVABLES",
        action = "store_true", default=False,
        help = "show the interpolated observables")
parser.add_option("-O", "--no-observables",
        dest = "OBSERVABLES",
        action = "store_false", default=False,
        help = "do not show the interpolated observables (default)")

parser.add_option("-b", "--binids",
        dest = "BINIDS",
        action = "append", default=None,
        help = "available binids for observable")


parser.add_option("-c", "--center",
        dest = "CENTER",
        action = "store_true", default=False,
        help = "show the center used for interpolating")
parser.add_option("-C", "--no-center",
        dest = "CENTER",
        action = "store_false", default=False,
        help = "do not show the center used for interpolating (default)")

## Add standard logging control
prof.addLoggingCLOptions(parser)

opts, args = parser.parse_args()
prof.log.setPriority(opts)
if not args:
    sys.stderr.write(parser.format_help() + "\n")
    sys.stderr.write("Error: No files given!\n")
    sys.exit(1)

prof.writeGuideLine()


for f in args:
    print os.path.basename(f)
    ipolset = prof.InterpolationSet.mkFromPickle(f)
    if opts.NUMRUNS:
        print ">> #runs: %i" % (len(ipolset.runskey.split(":")))
    if opts.RUNS:
        print ">> runs:"
        print ipolset.runskey.replace(":", " ")
    if opts.METHOD:
        print ">> method: %s" % (ipolset.ipolmethod.method)
    if opts.OBSERVABLES:
        obslist = set()
        for key in ipolset.iterkeys():
            obsname = key.split(":")[0]
            obslist.add(obsname)

        print ">> observables:"
        print " ".join(sorted(obslist))
    if opts.CENTER:
        print ">> center:"
        print ipolset.center
    if opts.BINIDS:
        for obs in sorted(opts.BINIDS):
            binids = ipolset.getObservableBins(obs).sortedBinIDs()
            print ">> bin-IDs for %s:"%obs
            output = ""
            for bid in binids:
                output += "  %s   (bin-center= %f)\n"%(bid, ipolset[bid].getBinCenter())
            print output
