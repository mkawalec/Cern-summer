#! /usr/bin/env python

usage = """\
Print out all minimization results in supplied pickled results files,
plus a small summary in terms of weighted means of all the results.
"""

import sys
from optparse import OptionParser

from professor.minimize import result
from professor.tools import messages

parser = OptionParser(usage=usage)
opts, args = parser.parse_args()

sys.stdout.write(messages.guideline)
sys.stdout.flush()

for pklfile in args:
    try:
        rs = result.ResultList.fromPickle(pklfile)
    except IndexError:
        print usage
        print "Error: bad number of arguments!"
        sys.exit(1)
    except IOError:
        print usage
        print "Error: file not found!"
        sys.exit(1)

    nruns = rs.getRunCounts()
    for n in sorted(nruns):
        print 20*"-" + "\n"
        print "Minimization results from %s that use %i runs:\n\n" % (pklfile, n)
        for r in rs:
            if len(r.runs) == n:
                print r , "\n"

    print 80*"*"
    print 80*"*" + "\n"
    print rs
    inside = result.ResultList([mr for mr in rs if not mr.f_extrapolation])
    nolimithit = result.ResultList([mr for mr in rs if not mr.f_hitlimit])
    both = result.ResultList([mr for mr in rs if mr.f_hitlimit and mr.f_extrapolation])
    print 80*"*" + "\n"
    print "%i results are in a region of extrapolation\n"%(len(rs) - len(inside))
    print "%i results hit parameter limits\n"%(len(rs) - len(nolimithit))
    print "%i results do both\n"%(len(both))
    if len(rs) != len(nolimithit):
        print 80*"*" + "\n"
        print "Summary of results that do not hit any limits:"
        print nolimithit
