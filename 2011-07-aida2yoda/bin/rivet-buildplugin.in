#! /usr/bin/env bash
## -*- sh -*-
## @configure_input@

## Print help
PROG=$(basename $0)
tmp=$(echo $* | egrep -- '--\<help\>|-\<h\>')
if test $# -lt 2 || test -n "$tmp"; then
    echo "$PROG: compilation helper for Rivet analysis plugins"
    echo
    echo "Usage: $PROG <libname> <source1> [<source2> [compiler_flags] ...]"
    echo
    echo "<libname> can be a path, provided the filename is of the form 'Rivet*.so'"
    echo
    echo "To make special build variations you can add appropriate compiler flags"
    echo "to the arguments and these will be passed directly to the compiler. For"
    echo "example, for a debug build of your plugin library, add '-g', and for a"
    echo "32 bit build on a 64 bit system add '-m32'."
    echo
    echo "Options:"
    echo "  -h | --help: display this help message"
    echo "  --with-root: add ROOT link options (requires root-config on system)"
    test -n "$tmp"
    exit $?
fi

## Work out shared library build flags by platform
shared_flags=
SWVERS=$(which sw_vers 2> /dev/null)
if test "$SWVERS" && test -x "$SWVERS"; then
  ## Mac OS X
  shared_flags="-undefined dynamic_lookup -bundle"
else
  ## Unix
  shared_flags="-shared -fPIC"
fi

## Get Rivet system C++ compiler (fall back to $CXX and then g++ if needed)
mycxx=g++
rivetcxx=$(which "@CXX@" 2> /dev/null)
abscxx=$(which "$CXX" 2> /dev/null)
if [[ -x "$rivetcxx" ]]; then
    mycxx="@CXX@"
elif [[ -x "$abscxx" ]]; then
    mycxx=$CXX
fi

## Get Rivet system C++ compiler flags
mycxxflags=""
if [[ -n "@CXXFLAGS@" ]]; then
    mycxxflags="@CXXFLAGS@"
fi

## Get Rivet system C preprocessor flags (duplicating that in rivet-config.in)
mycppflags=""
prefix="@prefix@"
irivet="@includedir@"
test -n "$irivet" && mycppflags="$mycppflags -I${irivet}"
ihepmc="@HEPMCINCPATH@"
test -n "$ihepmc" && mycppflags="$mycppflags -I${ihepmc}"
ifastjet="@FASTJETINCPATH@"
test -n "$ifastjet" && mycppflags="$mycppflags -I${ifastjet}"
igsl="@GSLINCPATH@"
test -n "$igsl" && mycppflags="$mycppflags -I${igsl}"
iboost="@BOOSTINCPATH@"
test -n "$iboost" && mycppflags="$mycppflags -I${iboost}"

## Link against ROOT if requested
with_root=$(echo $* | egrep -- '--\<with-root\>')
# echo $with_root
tmp=${@//--with-root/}
set $tmp


## Get and check the library name
libname=$1
match=$(basename "$libname" | egrep '^Rivet.*\.so')
if test -z "$match"; then
    echo "Library name '$libname' does not have the required 'Rivet*.so' name pattern" 1>&2
    exit 1
fi

## Get the source files (and more flags)
shift
sources_and_flags="$@"
if [[ -n $with_root ]]; then
    root_flags=$(root-config --libs 2> /dev/null)
    # echo $root_flags
    sources_and_flags="$root_flags $sources_and_flags"
fi

## Build
cmd="$mycxx -o \"$libname\" $shared_flags $mycppflags $mycxxflags $sources_and_flags"
echo $cmd
eval $cmd
