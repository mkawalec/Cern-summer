#ifndef ANALYSIS_RIVETAIDA_FHH
#define ANALYSIS_RIVETAIDA_FHH

/// @author Andy Buckley
/// @date   2009-01-30
/// @brief Forward declarations of AIDA interfaces

namespace AIDA {
  class IAnalysisFactory;
  class IHistogramFactory;
  class IHistogram1D;
  class IHistogram2D;
  class IProfile1D;
  class IDataPointSetFactory;
  class IDataPointSet;
  class IDataPoint;
  class IMeasurement;
  class ITreeFactory;
  class ITree;
  class IAxis;
}

#include <vector>

namespace Rivet {

  /// Typedef for a collection of bin edges.
  typedef std::vector<double> BinEdges;

  /// Container for x-axis point details
  struct DPSXPoint {
    DPSXPoint(double xval, double xerrminus, double xerrplus) :
      val(xval), errminus(xerrminus), errplus(xerrplus) { }
    double val;
    double errminus;
    double errplus;
  };

  /// Container for x-axis point details
  struct DPSXYPoint {
    DPSXYPoint(double xval, double xerrminus, double xerrplus, double yval, double yerrminus, double yerrplus) :
      xval(xval), xerrminus(xerrminus), xerrplus(xerrplus), yval(yval), yerrminus(yerrminus), yerrplus(yerrplus) { }
    double xval;
    double xerrminus;
    double xerrplus;
    double yval;
    double yerrminus;
    double yerrplus;
  };

}

#endif
